{"version":3,"sources":["components/DateBuilder.js","components/Weather.js","components/SuggestionList.js","components/Suggestion.js","App.js","index.js"],"names":["DateBuilder","className","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","api","Weather","query","setQuery","selectedPlace","setSelectedplace","useState","weather","setWeather","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","process","then","res","json","result","itemID","name","sys","country","Math","round","src","icon","alt","SuggestionList","data","setSelectedPlace","map","element","onClick","properties","formatted","random","Suggestion","setData","useEffect","features","catch","error","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28538e39.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css'\r\n\r\nconst DateBuilder = () =>{\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday \"];\r\n    \r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n    \r\n        return `${day} ${date} ${month} ${year}`\r\n      }\r\n\r\n      return(\r\n        <div className=\"date\">{dateBuilder(new Date())} </div>\r\n      )\r\n}\r\n\r\nexport default DateBuilder","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport DateBuilder from './DateBuilder';\r\n\r\nconst api = {\r\n  // key: \"\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n  baseImg: \"https://api.openweathermap.org/img/w/\"\r\n}\r\n\r\nconst Weather = ({query, setQuery, selectedPlace, setSelectedplace}) =>{\r\n\r\n  const [weather, setWeather] = useState('');\r\n\r\n  const search = (evt) => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${selectedPlace || query}&units=metric&APPID=${process.env.REACT_APP_OPEN_WEATHER_API_KEY}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setWeather(result);\r\n          setQuery('');\r\n          setSelectedplace(null);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app' }>\r\n      <main>\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search..\"\r\n            onChange={e => setQuery(e.target.value)}\r\n            value={selectedPlace}\r\n            onKeyPress={search}\r\n            itemID=\"search\"\r\n          />\r\n        </div>\r\n\r\n        {(typeof weather.main != \"undefined\") ? (\r\n          <div>\r\n            <div className=\"location-box\">\r\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\r\n              <DateBuilder />\r\n            </div>\r\n            <div className=\"weather-box\">\r\n              <div className=\"temp\">\r\n                {/* in vscode press Alt + 0176 for degree sign*/}\r\n                {Math.round(weather.main.temp)}Â°c\r\n              </div>\r\n              <div className=\"weather-icon\">\r\n              <img src={api.baseImg+weather.weather[0].icon+\".png\"} alt=\"icon\"/>\r\n              </div>\r\n              <div className=\"weather\">\r\n                {weather.weather[0].main}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"weather-box\">\r\n            <div className=\"temp not-found\">\r\n              Not Found\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst SuggestionList = ({data, query, setSelectedPlace}) => {\r\n\r\n    return (\r\n        <div className={(query !== '') ? \"Suggestion\" : \"hidden-list\"}>\r\n            {data && data.map(element => (\r\n                <div className=\"Suggestion-list\"\r\n                key={Math.random()*4}\r\n                onClick={() => setSelectedPlace(element.properties.formatted)}\r\n                >\r\n                    {element.properties.formatted}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuggestionList;","import React, { useEffect } from 'react';\r\nimport SuggestionList from './SuggestionList';\r\n\r\nconst api = {\r\n    base: 'https://api.geoapify.com/v1/geocode/autocomplete',\r\n    // key: ''\r\n}\r\n\r\nconst Suggestion = ({ query, setData, data, setSelectedPlace }) => {\r\n\r\n    useEffect(() => {\r\n        fetch(`${api.base}?text=${query}&apiKey=${process.env.REACT_APP_GEOAPIFY_API_KEY}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setData(result.features)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }, [query, setData])\r\n\r\n    return (\r\n        <SuggestionList data={data} query={query} setSelectedPlace={setSelectedPlace} />\r\n    )\r\n}\r\n\r\nexport default Suggestion;","import React, { useState } from 'react';\nimport './App.css';\nimport Weather from './components/Weather';\nimport Suggestion from './components/Suggestion';\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState(null);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n\n  return (\n    <div className=\"app\">\n      <Weather query={query} setQuery={setQuery} data={data} setData={setData} selectedPlace={selectedPlace} setSelectedplace={setSelectedPlace}/>\n      <Suggestion query={query} data={data} setData={setData} selectedPlace={selectedPlace} setSelectedPlace={setSelectedPlace} />\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}